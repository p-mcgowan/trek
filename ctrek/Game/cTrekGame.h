#define SHIP_TYPE hudStats[19]
void game(void);
void initialize(int whichArray);
char moveInput(void);
void clean (void);
//void location();
void move(char toWhere);
void printMap(int whichMap,int playerScanning);
int randomNumber(int max);
void systemObjects(void);
void choiceMenu(int debug);
void HUD(int x);
void findPlayer(void);
void securityStatus(void);
void null(void);
//void clearArrays();
void charColour(int arrayValue,int playerScanning,int arraySlot);
void planetMenu(void);
void shipyardMenu(void);
void commerceMenu(void);
void outfitterMenu(void);
void barMenu(void);
void planetHUD(void);
void initStats(int debug);
void initCommerce(void);
void initOutfit(void);
void prefix(int arrayValue,char unit);
void shipClass(int shipType);
void initShips(void);
void printShip(int ship);
int checkCapacity(int slot,int value,int ship);
void enemyMovement(void);
void shipInfo(int ship);
int resaleValue(void);
int rangeCheck(int player,int scans);
int rangeScan(int playerScanning, int arraySlot);
void fire(int playerFiring);
void damageReport(int damage,int player);
void hudColours(int currentHud,int maxHud);
int initEnemy(int died);
int clearCom(int startX);
void shipDestroyed(void);
void divertPower(int quantity);
void loot(void);
void seed(void);
void lootPrint(int number);
void printLog(void);
void firetorpedo(void);
void scan(int player,int ship,int scan);
void printDealArrow(int price,int lastBuy,int buyOrSell);
int preGameMenu(void);
int cargoLeft(void);
void printBuySell(char buySell,char commodity,int quantity,int costProfit,int shipCost);
int gunCount(void);
void skillsHUD(int x,int page);
void clearHUD(int x);
void achievementsMenu(void);
void gamblingMenu(void);
void hitAnim(int playerHit);
void printProgressBar(int skillSlot);
void debugMenu(void);
int gunRange(int totalGuns,int gunsInRange);